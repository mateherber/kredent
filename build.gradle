buildscript {
    ext {
        props = [
                "appId"      : "org.kredent.app",
                "minSdk"     : 24,
                "targetSdk"  : 33,
                "versionCode": 1,
                "versionName": "1.0"
        ]
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.hilt apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.kapt apply false
    alias libs.plugins.kotlin.parcelize apply false
    alias libs.plugins.navigation.safeargs apply false
    alias libs.plugins.spotless apply false
    alias libs.plugins.versions
}

subprojects {
    apply plugin: 'com.diffplug.spotless'

    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(libs.versions.ktlint.get())
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-opt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-opt-in=kotlin.Experimental"

            // Set JVM target to 11
            jvmTarget = JavaVersion.VERSION_11
        }
    }
}

dependencyUpdates.gradleReleaseChannel = "current"

def nonStable = [
        "androidx.appcompat"                   : "alpha",
        "androidx.compose.ui"                  : "alpha",
        "androidx.compose.material"            : "alpha",
        "androidx.constraintlayout"            : "alpha",
        "androidx.activity"                    : "alpha",
        "androidx.fragment"                    : "alpha",
        "androidx.core"                        : "alpha",
        "co.touchlab"                          : ["M1", "M2"],
        "com.squareup.okhttp3"                 : ["alpha", "RC"],
        "com.google.android.material"          : "alpha",
        "com.android.application"              : ["alpha", "beta", "rc"],
        "com.android.library"                  : ["alpha", "beta", "rc"],
        "org.jetbrains.kotlin.android"         : ["RC", "Beta"],
        "org.jetbrains.kotlin.kapt"            : ["RC", "Beta"],
        "org.jetbrains.kotlin.plugin.parcelize": ["RC", "Beta"],
        "org.jetbrains.kotlin"                 : ["RC", "M1", "M2", "Beta"],
        "org.jetbrains.kotlinx"                : "RC"
]

def isNonStable = { String group, String module, String version ->
    return nonStable[group]?.any { version.contains(it) } ?: false
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.group, it.candidate.module, it.candidate.version)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
